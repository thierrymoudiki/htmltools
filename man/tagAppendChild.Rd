% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tags.R
\name{tagAppendChild}
\alias{tagAppendChild}
\alias{tagAppendChildren}
\alias{tagSetChildren}
\alias{tagInsertChildren}
\title{Modify tag contents}
\usage{
tagAppendChild(tag, child, .cssSelector = NULL)

tagAppendChildren(tag, ..., .cssSelector = NULL, list = NULL)

tagSetChildren(tag, ..., .cssSelector = NULL, list = NULL)

tagInsertChildren(tag, after, ..., .cssSelector = NULL, list = NULL)
}
\arguments{
\item{tag}{a [tag] object.}

\item{child}{A child element to append to a parent tag.}

\item{.cssSelector}{A character string containing a [CSS
selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)
for targeting particular (inner) tags of interest. At the moment, only a
combination of
[type](https://www.w3.org/TR/CSS22/selector.html#type-selectors) (e.g,
`div`), [class](https://www.w3.org/TR/CSS22/selector.html#class-html)
(e.g., `.my-class`),
[id](https://www.w3.org/TR/CSS22/selector.html#id-selectors) (e.g.,
`#myID`), and
[universal](https://www.w3.org/TR/CSS22/selector.html#universal-selector)
(`*`) selectors within a given [simple
selector](https://www.w3.org/TR/CSS22/selector.html#selector-syntax) is
supported. Note, if `.cssSelector` is used, the returned tags will have
their `$children` fields flattened to a single `list()` via [`tagQuery()`].}

\item{...}{a collection of `child` elements.}

\item{list}{Deprecated. Use `!!!` instead to splice into `...`.}

\item{after}{an integer value (i.e., subscript) referring to the child position to append after.}
}
\description{
Modify the contents (aka children) of a [tag] object.
}
\examples{
html <- div(a(), h1())
tagAppendChild(html, span())
tagAppendChild(html, .cssSelector = "a", span())

tagAppendChildren(html, span(), p())
tagAppendChildren(html, .cssSelector = "a", span(), p())

tagSetChildren(html, span(), p())

tagInsertChildren(html, after = 1, span(), p())

}
\seealso{
[tagAppendAttributes()], [tagQuery()]
}
